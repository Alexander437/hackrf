name: HackRF

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  ubuntu-build:
    name: Build for ubuntu-22.04
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install backend dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm install
    - name: Build frontend
      run: |
        cd frontend
        npm run deploy
        rsync -av --delete dist/* ../backend/app/static

    - name: Build with Pyinstaller
      run: |
        pyinstaller --distpath app --onefile backend/main.py
        cp -r backend/app/static app

    - name: Prepare artifact directory
      run: |
        mkdir hrf_ubuntu
        mv app hrf_ubuntu/
        mv build hrf_ubuntu/
        mv main.spec hrf_ubuntu/
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: hrf_ubuntu
        path: hrf_ubuntu/
        if-no-files-found: warn
        retention-days: 90
        compression-level: 6
        overwrite: false

  windows-build:
    name: Build for windows-2022
    runs-on: windows-2022

    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install
      - name: Build frontend
        run: |
          cd frontend
          npm run deploy
          powershell -command "Remove-Item -Recurse -Force ../backend/app/static/*; Copy-Item -Recurse -Force dist/ ../backend/app/static/"

      - name: Build with Pyinstaller
        run: |
          pyinstaller --distpath app --onefile backend/main.py
          cp -r backend/app/static app

      - name: Prepare artifact directory
        run: |
          mkdir hrf_windows
          mv app hrf_windows/
          mv build hrf_windows/
          mv main.spec hrf_windows/
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hrf_windows
          path: hrf_windows/
          if-no-files-found: warn
          retention-days: 90
          compression-level: 6
          overwrite: false

  rpi-build:
    name: Build for Raspberry PI OS (Experimental)
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Pull Raspberry Pi OS Docker image
        run: |
          docker pull balenalib/rpi-debian:stretch

      - name: Run build inside Docker
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace balenalib/rpi-debian:stretch /bin/bash -c "
          apt-get update &&
          apt-get install -y python3 python3-pip nodejs npm &&
          python3 -m pip install --upgrade pip &&
          pip3 install -r backend/requirements.txt &&
          cd frontend &&
          npm install &&
          npm run deploy &&
          rsync -av --delete dist/* ../backend/app/static &&
          cd .. &&
          pyinstaller --distpath app --onefile backend/main.py &&
          cp -r backend/app/static app &&

      - name: Prepare artifact directory
        run: |
          mkdir hrf_rpi_experimental
          mv app hrf_rpi_experimental/
          mv build hrf_rpi_experimental/
          mv main.spec hrf_rpi_experimental/
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: hrf_rpi_experimental
          path: hrf_rpi_experimental/
          if-no-files-found: warn
          retention-days: 90
          compression-level: 6
          overwrite: false